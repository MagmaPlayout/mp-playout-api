--
-- File generated with SQLiteStudio v3.1.1 on vie abr 14 18:19:49 2017
--
-- Text encoding used: System
--
PRAGMA foreign_keys = off;
BEGIN TRANSACTION;

-- Table: CompositeSketch
DROP TABLE IF EXISTS CompositeSketch;
CREATE TABLE CompositeSketch (id INTEGER PRIMARY KEY AUTOINCREMENT, idComposite INTEGER REFERENCES CompositeSketch (id) ON DELETE NO ACTION ON UPDATE NO ACTION, idLeaf REFERENCES Sketch (id) ON DELETE NO ACTION ON UPDATE NO ACTION);

-- Table: Media
DROP TABLE IF EXISTS Media;
CREATE TABLE Media (id INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE NOT NULL, name TEXT NOT NULL UNIQUE, duration TEXT, frameRate INTEGER, description TEXT, path TEXT NOT NULL, frameCount INTEGER, resolution TEXT, toBeDeleted BOOLEAN);

-- Table: MediaInfo
DROP TABLE IF EXISTS MediaInfo;
CREATE TABLE MediaInfo (id INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE NOT NULL, mediaId INTEGER REFERENCES Media (id) ON DELETE NO ACTION ON UPDATE NO ACTION, "key" TEXT, value TEXT);

-- Table: Piece
DROP TABLE IF EXISTS Piece;
CREATE TABLE Piece (id INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE NOT NULL, mediaID INTEGER REFERENCES Media (id) ON DELETE NO ACTION ON UPDATE NO ACTION, sketchId INTEGER REFERENCES Sketch (id) ON DELETE NO ACTION ON UPDATE NO ACTION, resolution TEXT, duration TEXT);

-- Table: Playlist
DROP TABLE IF EXISTS Playlist;
CREATE TABLE Playlist (id INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE NOT NULL, name TEXT NOT NULL, duration TEXT, description TEXT);

-- Table: PlaylistPieces
DROP TABLE IF EXISTS PlaylistPieces;
CREATE TABLE PlaylistPieces (id INTEGER PRIMARY KEY AUTOINCREMENT, "index" INTEGER NOT NULL, playlistId INTEGER REFERENCES Playlist (id) ON DELETE NO ACTION ON UPDATE NO ACTION, pieceId INTEGER REFERENCES Piece (id) ON DELETE NO ACTION ON UPDATE NO ACTION);

-- Table: Sketch
DROP TABLE IF EXISTS Sketch;
CREATE TABLE Sketch (id INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE NOT NULL, htmlContent TEXT, name TEXT NOT NULL, description TEXT);

-- Table: Tag
DROP TABLE IF EXISTS Tag;
CREATE TABLE Tag (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL UNIQUE, tag TEXT);

-- Table: TagMedias
DROP TABLE IF EXISTS TagMedias;
CREATE TABLE TagMedias (id INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE NOT NULL, tag TEXT UNIQUE NOT NULL, mediaId INTEGER REFERENCES Media (id) ON DELETE NO ACTION ON UPDATE NO ACTION);

-- Table: TagPieces
DROP TABLE IF EXISTS TagPieces;
CREATE TABLE TagPieces (id INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE NOT NULL, tag TEXT UNIQUE NOT NULL, pieceId INTEGER REFERENCES Piece (id) ON DELETE NO ACTION ON UPDATE NO ACTION);

-- Table: TagPlaylists
DROP TABLE IF EXISTS TagPlaylists;
CREATE TABLE TagPlaylists (id INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE NOT NULL, tag TEXT UNIQUE NOT NULL, playlistId REFERENCES Playlist (id) ON DELETE NO ACTION ON UPDATE NO ACTION);

-- Table: TagSketches
DROP TABLE IF EXISTS TagSketches;
CREATE TABLE TagSketches (id INTEGER PRIMARY KEY AUTOINCREMENT, tag TEXT UNIQUE NOT NULL, sketchId INTEGER REFERENCES Sketch (id) ON DELETE NO ACTION ON UPDATE NO ACTION);

-- Table: Thumbnail
DROP TABLE IF EXISTS Thumbnail;
CREATE TABLE Thumbnail (id INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE NOT NULL, mediaId INTEGER REFERENCES Media (id) ON DELETE NO ACTION ON UPDATE NO ACTION, path TEXT NOT NULL);

COMMIT TRANSACTION;
PRAGMA foreign_keys = on;
